<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="Face Reco." id="1" localization="8" tooltip="Detect people&apos;s face and recognize those which are known by the robot.&#x0A;&#x0A;Note: the robot needs to learn a face with the Learn Face box before he can recognize it." x="365" y="80">
                            <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Input name="FaceDetected" type="0" type_size="1" nature="4" stm_value_name="FaceDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
                            <Output name="onRecognizedFaces" type="3" type_size="1" nature="2" inner="0" tooltip="Names of recognized faces. If several faces are recognized, they are sent one&#x0A;after an other on this output." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Reco. Det. Faces" id="1" localization="8" tooltip="Process face detection extractor data (FaceDetected) to extract the labels of&#x0A;recognized faces and notify when there is a face detected but not recognized.&#x0A;&#x0A;An output (either one or the other) is stimulated each time the number of&#x0A;recognized faces change." x="183" y="68">
                                                <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.session = qi.Session()
        self.session.connect("192.168.1.105:9559")

        self.memory = self.session.service("ALMemory")
        self.facedetected = self.session.service("ALFaceDetection")
        self.tts = self.session.service("ALTextToSpeech")
    def onLoad(self):
        self.timeFilteredResult = [];
        self.signalID = 0
        self.timeFilteredResult = [];
        self.counter = 0

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def callback(self,int, value):
        self.logger.info("callback call" + value)
        # in case the button OK is press
        if int:

            done = self.facedetected.learnFace(value)
            if(done != true):
                self.facedetected.reLearnFace(value)
            self.onDetectWithoutReco(value)

        # in case the button CANCEL is press
        else :
            self.tts.say("Ok!buy buy")
            #self.onInput_onStop()
        #disconnect from the signal to avoid repetition
        self.tabletService.onInputText.disconnect(self.signalID)

    def onInput_onStart(self, p):
        if(len(p) > 0):
            if(len(p[1]) > 0): # just in case of the ALValue is in the wrong format
                # get the ALValue returned by the time filtered recognition:
                #    - [] when nothing new.
                #    - [4] when a face has been detected but not recognized during the first 8s.
                #    - [2, [faceName]] when one face has been recognized.
                #    - [3, [faceName1, faceName2, ...]] when several faces have been recognized.
                self.timeFilteredResult = p[1][len(p[1]) -1]
                if( len(self.timeFilteredResult) == 1 ):
                    # If a face has been detected for more than 8s but not recognized
                    if(self.timeFilteredResult[0] == 4):
                        tabletService = self.session.service('ALTabletService')
                        tabletService.showInputTextDialog("Enter your name please","OK","CANCEL","",10)
                        self.signalID = tabletService.onInputText.connect(self.callback)
                elif( len(self.timeFilteredResult) == 2 ):
                    # If one or several faces have been recognized
                    if(self.timeFilteredResult[0] in [2, 3]):
                        self.onRecognizedFace( self.timeFilteredResult[1][0]  )
                        self.tts.say("well come back" + self.timeFilteredResult[1][0] + "i can see you have appreciate the game. let play one more" )

                self.onStopped()
    def onInput_onStop(self):
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;FaceDetected extractor data." id="2" />
                                                <Output name="onRecognizedFace" type="3" type_size="1" nature="1" inner="0" tooltip="Name of recognized face. If several faces are recognized, they are sent one after an&#x0A;other on this output.&#x0A;&#x0A;Note: if it is the wrong face which has been recognized, you have 7s to rename&#x0A;it with the relearn function available on one of  Add/Del Faces sub-boxes (Learn Face&#x0A;box)." id="3" />
                                                <Output name="onDetectWithoutReco" type="1" type_size="1" nature="1" inner="0" tooltip="A face has been detected for more than 8s but has not been recognized. It means&#x0A;that the robot does not know this face but it would be a good idea to learn it." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="6" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Face Reco. (1)" id="2" localization="8" tooltip="Detect people&apos;s face and recognize those which are known by the robot.&#x0A;&#x0A;Note: the robot needs to learn a face with the Learn Face box before he can recognize it." x="591" y="131">
                            <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Input name="FaceDetected" type="0" type_size="1" nature="4" stm_value_name="FaceDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
                            <Output name="onRecognizedFaces" type="3" type_size="1" nature="2" inner="0" tooltip="Names of recognized faces. If several faces are recognized, they are sent one&#x0A;after an other on this output." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Reco. Det. Faces" id="1" localization="8" tooltip="Process face detection extractor data (FaceDetected) to extract the labels of&#x0A;recognized faces and notify when there is a face detected but not recognized.&#x0A;&#x0A;An output (either one or the other) is stimulated each time the number of&#x0A;recognized faces change." x="185" y="44">
                                                <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import qi

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.session = qi.Session()
        self.session.connect("192.168.1.105:9559")

        self.memory = self.session.service("ALMemory")
        self.facedetected = self.session.service("ALFaceDetection")
        self.tts = self.session.service("ALTextToSpeech")
        self.signalID = 0

    def onLoad(self):
        #self.tts.say("Im loading")
        self.timeFilteredResult = [];
        #self.memory.unsubscribeToEvent("ALTabletService/onInputText", self.getName())
        self.counter = 0

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def callback(self,int, value):
        self.logger.info("callback call" + value)
        # in case the button OK is press
        if int:

            done = self.facedetected.learnFace(value)
            if(done != true):
                self.facedetected.reLearnFace(value)
            self.onDetectWithoutReco(value)

        # in case the button CANCEL is press
        else :
            self.tts.say("Ok!buy buy")
            #self.onInput_onStop()
        #disconnect from the signal to avoid repetition
        self.tabletService.onInputText.disconnect(self.signalID)

    def onInput_onStart(self, p):
        if (self.counter == 1):
            self.logger.info("I'm here")
            self.onStopped()
        else:
            #self.tts.say("A moment please!")
            if(len(p) > 0):
                self.counter += 1
                self.logger.info(p)
                if(len(p[1]) > 0): # just in case of the ALValue is in the wrong format
                    self.logger.info("here here")
                    # get the ALValue returned by the time filtered recognition:
                    #    - [] when nothing new.
                    #    - [4] when a face has been detected but not recognized during the first 8s.
                    #    - [2, [faceName]] when one face has been recognized.
                    #    - [3, [faceName1, faceName2, ...]] when several faces have been recognized.

                    self.timeFilteredResult = p[1][len(p[1]) -1]
                    if( len(self.timeFilteredResult) == 1 ):
                        self.logger.info("new face")
                        self.tts.say("Hello you! I a pepper!. i would like to know your name!please field the space shown on my tablet")
                        # If a face has been detected for more than 8s but not recognized
                        if(self.timeFilteredResult[0] == 4):
                            #self.onDetectWithoutReco()
                            tabletService = self.session.service('ALTabletService')
                            tabletService.showInputTextDialog("Enter your name please","OK","CANCEL","",10)
                            self.signalID = tabletService.onInputText.connect(self.callback)
                            #time.sleep(120)
                        #self.facedetected.unsubscribe("FaceDetected")

                    elif( len(self.timeFilteredResult) == 2  | len(self.timeFilteredResult) == 3):
                        self.tts.say("well come back" + self.timeFilteredResult[1][0] + "i can see you have appreciate the game. let play one more" )
                        self.onRecognizedFace(self.timeFilteredResult[1][0])
                        #time.sleep(120)

                else:
                    self.tts.say("no face")

    def onInput_onStop(self):
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;FaceDetected extractor data." id="2" />
                                                <Input name="input" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                <Output name="onRecognizedFace" type="3" type_size="1" nature="1" inner="0" tooltip="Name of recognized face. If several faces are recognized, they are sent one after an&#x0A;other on this output.&#x0A;&#x0A;Note: if it is the wrong face which has been recognized, you have 7s to rename&#x0A;it with the relearn function available on one of  Add/Del Faces sub-boxes (Learn Face&#x0A;box)." id="4" />
                                                <Output name="onDetectWithoutReco" type="3" type_size="1" nature="1" inner="0" tooltip="A face has been detected for more than 8s but has not been recognized. It means&#x0A;that the robot does not know this face but it would be a good idea to learn it." id="5" />
                                                <Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                            </Box>
                                            <Box name="Face Reco." id="6" localization="8" tooltip="Detect people&apos;s face and recognize those which are known by the robot.&#x0A;&#x0A;Note: the robot needs to learn a face with the Learn Face box before he can recognize it." x="505" y="172">
                                                <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="FaceDetected" type="0" type_size="1" nature="4" stm_value_name="FaceDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
                                                <Output name="onRecognizedFaces" type="3" type_size="1" nature="2" inner="0" tooltip="Names of recognized faces. If several faces are recognized, they are sent one&#x0A;after an other on this output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Reco. Det. Faces" id="1" localization="8" tooltip="Process face detection extractor data (FaceDetected) to extract the labels of&#x0A;recognized faces and notify when there is a face detected but not recognized.&#x0A;&#x0A;An output (either one or the other) is stimulated each time the number of&#x0A;recognized faces change." x="183" y="68">
                                                                    <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.session = qi.Session()
        self.session.connect("192.168.1.105:9559")

        self.memory = self.session.service("ALMemory")
        self.facedetected = self.session.service("ALFaceDetection")
        self.tts = self.session.service("ALTextToSpeech")
    def onLoad(self):
        self.timeFilteredResult = [];
        self.signalID = 0
        self.timeFilteredResult = [];
        self.counter = 0

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def callback(self,int, value):
        self.logger.info("callback call" + value)
        # in case the button OK is press
        if int:

            done = self.facedetected.learnFace(value)
            if(done != true):
                self.facedetected.reLearnFace(value)
            self.onDetectWithoutReco(value)

        # in case the button CANCEL is press
        else :
            self.tts.say("Ok!buy buy")
            #self.onInput_onStop()
        #disconnect from the signal to avoid repetition
        self.tabletService.onInputText.disconnect(self.signalID)

    def onInput_onStart(self, p):
        if (self.counter == 1):
            self.logger.info("I'm here")
            self.onStopped()
        else:
            if(len(p) > 0):
                if(len(p[1]) > 0): # just in case of the ALValue is in the wrong format
                    # get the ALValue returned by the time filtered recognition:
                    #    - [] when nothing new.
                    #    - [4] when a face has been detected but not recognized during the first 8s.
                    #    - [2, [faceName]] when one face has been recognized.
                    #    - [3, [faceName1, faceName2, ...]] when several faces have been recognized.
                    self.timeFilteredResult = p[1][len(p[1]) -1]
                    if( len(self.timeFilteredResult) == 1 ):
                        # If a face has been detected for more than 8s but not recognized
                        if(self.timeFilteredResult[0] == 4):
                            self.onDetectWithoutReco()
                    elif( len(self.timeFilteredResult) == 2 ):
                        # If one or several faces have been recognized
                        if(self.timeFilteredResult[0] in [2, 3]):
                            for s in self.timeFilteredResult[1]:
                                self.onRecognizedFace( s )

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;FaceDetected extractor data." id="2" />
                                                                    <Output name="onRecognizedFace" type="3" type_size="1" nature="1" inner="0" tooltip="Name of recognized face. If several faces are recognized, they are sent one after an&#x0A;other on this output.&#x0A;&#x0A;Note: if it is the wrong face which has been recognized, you have 7s to rename&#x0A;it with the relearn function available on one of  Add/Del Faces sub-boxes (Learn Face&#x0A;box)." id="3" />
                                                                    <Output name="onDetectWithoutReco" type="1" type_size="1" nature="1" inner="0" tooltip="A face has been detected for more than 8s but has not been recognized. It means&#x0A;that the robot does not know this face but it would be a good idea to learn it." id="4" />
                                                                </Box>
                                                                <Box name="Face Reco." id="2" localization="8" tooltip="Detect people&apos;s face and recognize those which are known by the robot.&#x0A;&#x0A;Note: the robot needs to learn a face with the Learn Face box before he can recognize it." x="566" y="26">
                                                                    <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Input name="FaceDetected" type="0" type_size="1" nature="4" stm_value_name="FaceDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
                                                                    <Output name="onRecognizedFaces" type="3" type_size="1" nature="2" inner="0" tooltip="Names of recognized faces. If several faces are recognized, they are sent one&#x0A;after an other on this output." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Reco. Det. Faces" id="1" localization="8" tooltip="Process face detection extractor data (FaceDetected) to extract the labels of&#x0A;recognized faces and notify when there is a face detected but not recognized.&#x0A;&#x0A;An output (either one or the other) is stimulated each time the number of&#x0A;recognized faces change." x="185" y="44">
                                                                                        <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import qi

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.session = qi.Session()
        self.session.connect("192.168.1.105:9559")

        self.memory = self.session.service("ALMemory")
        self.facedetected = self.session.service("ALFaceDetection")
        self.tts = self.session.service("ALTextToSpeech")
        self.signalID = 0

    def onLoad(self):
        #self.tts.say("Im loading")
        self.timeFilteredResult = [];
        #self.memory.unsubscribeToEvent("ALTabletService/onInputText", self.getName())
        self.counter = 0

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def callback(self,int, value):
        self.logger.info("callback call" + value)
        # in case the button OK is press
        if int:

            done = self.facedetected.learnFace(value)
            if(done != true):
                self.facedetected.reLearnFace(value)
            self.onDetectWithoutReco(value)

        # in case the button CANCEL is press
        else :
            self.tts.say("Ok!buy buy")
            #self.onInput_onStop()
        #disconnect from the signal to avoid repetition
        self.tabletService.onInputText.disconnect(self.signalID)

    def onInput_onStart(self, p):
        if (self.counter == 1):
            self.logger.info("I'm here")
            #self.onStopped()
        else:
            #self.tts.say("A moment please!")
            if(len(p) > 0):
                self.counter += 1
                self.logger.info(p)
                if(len(p[1]) > 0): # just in case of the ALValue is in the wrong format
                    self.logger.info("here here")
                    # get the ALValue returned by the time filtered recognition:
                    #    - [] when nothing new.
                    #    - [4] when a face has been detected but not recognized during the first 8s.
                    #    - [2, [faceName]] when one face has been recognized.
                    #    - [3, [faceName1, faceName2, ...]] when several faces have been recognized.

                    self.timeFilteredResult = p[1][len(p[1]) -1]
                    if( len(self.timeFilteredResult) == 1 ):
                        self.logger.info("new face")
                        self.tts.say("Hello you! I a pepper!. i would like to know your name!please field the space shown on my tablet")
                        # If a face has been detected for more than 8s but not recognized
                        if(self.timeFilteredResult[0] == 4):
                            #self.onDetectWithoutReco()
                            tabletService = self.session.service('ALTabletService')
                            tabletService.showInputTextDialog("Enter your name please","OK","CANCEL","",10)
                            self.signalID = tabletService.onInputText.connect(self.callback)
                            #time.sleep(120)
                        #self.facedetected.unsubscribe("FaceDetected")

                    elif( len(self.timeFilteredResult) == 2  | len(self.timeFilteredResult) == 3):
                        self.tts.say("well come back" + self.timeFilteredResult[1][0] + "i can see you have appreciate the game. let play one more" )
                        self.onRecognizedFace(self.timeFilteredResult[1][0])
                        #time.sleep(120)

                else:
                    self.tts.say("no face")

    def onInput_onStop(self):
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;FaceDetected extractor data." id="2" />
                                                                                        <Input name="input" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                                                        <Output name="onRecognizedFace" type="3" type_size="1" nature="1" inner="0" tooltip="Name of recognized face. If several faces are recognized, they are sent one after an&#x0A;other on this output.&#x0A;&#x0A;Note: if it is the wrong face which has been recognized, you have 7s to rename&#x0A;it with the relearn function available on one of  Add/Del Faces sub-boxes (Learn Face&#x0A;box)." id="4" />
                                                                                        <Output name="onDetectWithoutReco" type="3" type_size="1" nature="1" inner="0" tooltip="A face has been detected for more than 8s but has not been recognized. It means&#x0A;that the robot does not know this face but it would be a good idea to learn it." id="5" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="3" outputowner="1" indexofoutput="6" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="6" outputowner="1" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
